<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-2.5.xsd

	
		">

	
	<!-- Base Package -->

	<tx:annotation-driven />

	<context:annotation-config />
	<context:component-scan base-package="spring.*" />
	<mvc:annotation-driven />



	<!-- ViewResolver with Tiles -->
	
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.tiles3.TilesView" />
	</bean>



	<!-- Apache Tiles Configuration -->

	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>

	<!-- MemcachedClient Configuration -->

	<bean id="plainCallbackHandler" class="net.spy.memcached.auth.PlainCallbackHandler">
		<constructor-arg index="0"
			value="#{systemEnvironment['MEMCACHIER_USERNAME']}" />
		<constructor-arg index="1"
			value="#{systemEnvironment['MEMCACHIER_PASSWORD']}" />
	</bean>

	<bean id="authDescriptor" class="net.spy.memcached.auth.AuthDescriptor">
		<constructor-arg index="0">
			<array>
				<value>PLAIN</value>
			</array>
		</constructor-arg>
		<constructor-arg index="1" ref="plainCallbackHandler" />
	</bean>

	<bean id="memcachedClient" class="net.spy.memcached.spring.MemcachedClientFactoryBean">
	
		<property name="servers" value="#{systemEnvironment['MEMCACHIER_SERVERS']}" />
		<property name="authDescriptor" ref="authDescriptor" />
		<property name="protocol" value="BINARY" />

	</bean>

	  <bean id="messageAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
 
                <!-- Support JSON --> 
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
                
            </list>
        </property>
    </bean>
	<!-- DataSource Configuration -->

	<bean class="java.net.URI" id="dbUrl">
		<constructor-arg value="#{systemEnvironment['DATABASE_URL']}" />
	</bean>

	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="#{'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath()}" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
		<property name="connectionProperties"
			value="ssl=true;sslfactory=org.postgresql.ssl.NonValidatingFactory;"></property>
	</bean>



	<!--Session factory for hibernate -->

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource"></property>
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>



	<!-- Transaction Manager -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>


	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="userServicePointCut"
			expression="execution(* spring.forum.models.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
	</aop:config>



	<!--Additional Resources -->

	<mvc:resources mapping="/resources/**" location="/resources/" />


</beans>
